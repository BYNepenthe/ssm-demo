<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">


	<!-- <context:annotation-config></context:annotation-config> -->
	<!-- 注解配置 -->
	<context:component-scan base-package="com.uuider.controller"></context:component-scan>
	<!-- <mvc:annotation-driven /> -->
	<!-- <context:component-scan base-package="com.uuider.studentmanager">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	<mvc:annotation-driven /> -->
	
	<!-- 导入属性配置文件 -->  
	<context:property-placeholder location="classpath:mysql.properties" />  
<!-- 	<context:property-placeholder location="classpath:mysql.properties" />   -->
	
	
	<!-- <bean id="userService" class="com.kyt.service.impl.UserServiceImpl"></bean>
	<bean id="userDao" class="com.kyt.dao.impl.UserDaoImpl"></bean> -->
	
	
    <!-- DBCP数据源 -->
    <!--<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" 
    	p:driverClassName="${jdbc.driverClassName}" 
    	p:url="${jdbc.url}"/>
    	p:username="${username}"
    	p:password="${password}"  -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
    	
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
	    <property name="dataSource" ref="dataSource" />  
	</bean>  
	  
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" name="ysSqlSessionFactory">  
	    <property name="configLocation" value="classpath:mybatis-config.xml" />  
	    <property name="dataSource" ref="dataSource" />  
	</bean>  
	
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="annotationClass" value="org.springframework.stereotype.Repository"/>
        <property name="basePackage" value="com.uuider.mappers"/>
        <!-- <property name="sqlSessionFactoryBeanName" value="ysSqlSessionFactory"/> -->
        <!-- <property name="sqlSessionFactory" ref="sqlSessionFactory"/> -->
    </bean>
	
	  
	<!-- mapper bean -->  
	<!-- <bean id="studentMapper" class="org.mybatis.spring.MapperFactoryBean">  
	    <property name="mapperInterface" value="com.uuider.studentmanager.mappers.StudentMapper" />  
	    <property name="sqlSessionFactory" ref="sqlSessionFactory" />  
	</bean>   -->
    	
    	
    	
    <!-- 配置JNDI数据源 -->
    <!-- <bean id="dataSource"
        class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName">
            <value>java:comp/env/jdbc/c3p0DB</value>
           <value>java:comp/env/jdbc/HTGL</value>
        </property>
    </bean>
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">  
        <property name="dataSource">  
            <ref bean="dataSource" />  
        </property>  
    </bean>
    
    
    AOP配置日志记录
	<bean id="logAdvice" class="com.kyt.aop.LogIntercepter"></bean>
	<aop:config>	
		<aop:pointcut expression="execution(public * com.kyt.service..*.*(..))" id="servicePointcut"/>
		<aop:aspect id="logAspect" ref="logAdvice">
			<aop:before method="before" pointcut-ref="servicePointcut"/>
			<aop:after method="after" pointcut-ref="servicePointcut"/>
			<aop:around method="around" pointcut-ref="servicePointcut"/>
            <aop:after-throwing method="throwing" pointcut-ref="servicePointcut" throwing="e"/>
            <aop:after-returning method="afterReturning" pointcut="execution(public * com.kyt.service..*.*(..)) " returning="jp"/>
		</aop:aspect>
	</aop:config>
    
    AOP配置事务
     <bean id="txManager" class="org.springframework.transaction.jta.JtaTransactionManager"/>
	<tx:annotation-driven transaction-manager="txManager" />
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
	    <property name="dataSource" ref="dataSource"></property>  
	</bean>
	
	<aop:config>  
        <aop:pointcut expression="execution(public * com.kyt.service..*.*(..))" id="serviceOperation"/>  
        <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceOperation"/>  
    </aop:config>  
  
    <tx:advice id="txAdvice" transaction-manager="txManager">  
        <tx:attributes>  
            <tx:method name="insert*"/>  
        </tx:attributes>  
    </tx:advice>  --> 

</beans>